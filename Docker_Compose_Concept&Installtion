## Docker-Compose Setup
----------------------------------

## Docker-compose:- u can define multi-container docker application in a docker-compose.yml file and execute thm all at a same time.
 ----------------   

 # apt install docker.io -y                          ##{installing docker}
 
 # apt install docker-compose -y                     ##{installing docker-compose}
 
 # apt update
 
 # vi docker-compose.yml                 ##{creating docker-compose file, cuzz docker-compse read only yml or jason file formate only}
version: "3"                             ##{version based on the docker engine}
services:                                ##{services/image/sodtware parameter}
  nginx1:          ##{appnode1}          ##{appnode, we can give any name, it will show on containers_name}
    image: nginx                         ##{image on which u want to create container}
    ports:                               ##{exposing/opening port for container}
      - "9000:80"                        ##{portmapping from 9000 dockerhost to 80 nginx_container}
  nginx2:          ##{appnode2}          ##{another nginx container}
    image: nginx
    ports:
      - "8000:80"
  jenkins3:         ##{appnode3}
    image: jenkins
    ports:
      - 7000:8080
 
 :wq                                       ##{exit & save}
 
 
 # docker-compose up -d              ##{running docker-compose file/script in detachable mode, -d=detachable mode}
 
 # docker ps
 
 # localhostIP:8000               ##{hit the browsr}
 # localhostIP:9000               ##{hit the browser}
 
 # docker-compose logs -f                  ##{check the logs of both the container}
 
 # docker network ls              ##{by default new network will be created}
 
 # docker-compose down           ##{to delete the running container and everything acsept volume}
 
 # docker volume rm volume_id        ##{deleting volume}
 
------------------------------------------------------------------------------------------------------------------------------------- 



############## DOCKER-COMPOSE COMMANDS ###########

##{note:- docker-compose command will not have any control on normal container<which are not associated with docker-compose script>}

# docker-compose pull               ##{pulling the image from locally otherwise dockerhub which are mentioned in the scipt}

# docker-compose create             ##{create all container but not running and also they will not have any network attached

# docker-compose up -d                    ##{creating & running all container are present in docker-compose.yml aslo atach default new ork

# docker-compose up -d nginx2             ##{creating & running only 1 container which are present in docker-compose.yml

# docker-compose ps                       ##{to show status & detail of all container}

# docker-compose down                    ##{deleting all running container with network but this will not dlete volume}

# docker-compose down --v                ##{deleting all running container with respective volumes}

# docker-compose start                  ##{starting all stopped container}

# docker-compose start nginx2            ##{starting nginx2 container only}

# docker-compose stop                   ##{stopping all started container}
       OR
  docker-compose kill
  
# docker-compose stop nginx2             ##{stopping 1 container which name is nginx2
      OR
  docker-compose kill nginx2

# docker-compose restart                ##{restarting all the containers}

# docker-compose rm container_id              ##{remove stop container}

# docker-compose logs -f                    ##{to check the logs}

# docker-compose logs -f nginx2              ##{checking logs for only 1 container

# docker-compose port nginx2 80              ##{show the port mapping}

# docker-compose pause                        ##{pause all container}

# docker-compose unpause                      ##{unpause all the container}

# docker-compose pause nginx2                 ##{pause a container which named as nginx2 only, so u will not be able to access it}

# docker-compose unpause nginx2               ##{unpause the container}

# docker-compose exec nginx2 ls               ##{executing list command inside a container from localhost}

# docker-compose run nginx2 ls                ##{creating a container of nginx2 service in stopped state and executing list command}

# docker-compose top                          ##{to check which process, port and memory running inside the container}



########## DOCKER-COMPOSE BIND-MOUNT #################################

# touch myfile.txt

# vi docker-compose.yml                 ##{creating docker-compose file, cuzz docker-compse read only yml or jason file formate only}
version: "3"                             ##{version based on the docker engine}
services:                                ##{services/image/sodtware parameter}
  nginx1:          ##{appnode1}          ##{appnode, we can give any name, it will show on containers_name}
    image: nginx                         ##{image on which u want to create container}
    ports:                               ##{exposing/opening port for container}
      - "9000:80"                        ##{portmapping from 9000 dockerhost to 80 nginx_container}
    volumes:
      - .myfile.txt:/tmp/prod                ##{mounting pwd myfile in conrainer's prod location}


-----------------------------------------------------------------------------------------------------------------------------------


## DOCKER-Compose SCALE :-  Can create muiltiple container {remeber dockerhost port should not conflict}
__________________________

# docker-compose scale nginx1=3 nginx2=5 

# docker-compose ps



_______________________________________________________________________________________________________________________________________


#### QUESTIONS & ANSWERE ######################################

Q.) How to assign auto assign port or dynamic port mapping in docker-compose file?
A.)

Q.) how can i enable auto scaling for container, if container goes down?


Q.) how to create and build image& run container of Dockerfile through docker-compose.yml script?
           OR
    how to run Dockerfile from docker-compose.yml
A.) Step1) create Dockerfile
    Step2) Create docker-compose.yml and use build parameter
    

 # {:-if u want to run docker-compose.yml file with different name like myfile.yml}
 # mv docker-compose.yml myfile.yml
 # docker-compose -f myfile.yml up -d
 
 
Q.) How to scale container?
A.) docker-compose scale servicename             ##{servicename is an appnode which u have mention in docker-compose.yml}
